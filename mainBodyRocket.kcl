outer_diameter = 2.16 / 2
inner_diameter = 1.84 / 2
fin_depth = .1
fit_tolerance = 0.005

fn ring = (center, od, id) => {
  outer = startSketchOn('XY')
    |> circle({ center: center, radius: od }, %)
  inner = startSketchOn('XY')
    |> circle({ center: center, radius: id }, %)
  return outer
  |> hole(inner, %)
}

ring001 = ring([0, 0], outer_diameter, inner_diameter)
rocket_body = extrude(10, ring001)


fn createFin = () => {
  return startSketchOn('XZ')
  |> startProfileAt([2.18 / 2, 0], %)
  |> line([5.03 / 2, 0], %, $seg01)
  |> tangentialArcTo([7.37 / 2, 1.31], %)
  |> line([-5.5 / 2, 2.86 / 2], %)
  |> lineTo([profileStartX(%), profileStartY(%)], %)
  |> close(%)
}
extrude001 = extrude(fin_depth, createFin())
extrude002 = extrude(-fin_depth, createFin())
fin = [extrude001, extrude002]

fin
  |> patternCircular3d({
       axis: [0, 0, 1],
       center: [0, 0, 0],
       instances: 3,
       arcDegrees: 360,
       rotateDuplicates: true
     }, %)

engine_block_height = 7
engine_block_inner_radius = (1.08 - fit_tolerance) / 2
engine_block_outer_radius = engine_block_inner_radius + 0.5
engine_block_handle_radius = 0.324 / 2
engine_block_handle_sweep_radius = engine_block_inner_radius + (engine_block_outer_radius - engine_block_inner_radius - engine_block_handle_radius) / 2

sketch005 = startSketchOn('XZ')
  |> startProfileAt([
       engine_block_inner_radius,
       engine_block_height
     ], %)
  |> angledLine([0, 0.92 / 2], %, $rectangleSegmentA001)
  |> angledLine([
       segAng(rectangleSegmentA001) + 90,
       engine_block_outer_radius
     ], %, $rectangleSegmentB001)
  |> angledLine([
       segAng(rectangleSegmentA001),
       -segLen(rectangleSegmentA001)
     ], %, $rectangleSegmentC001)
  |> lineTo([profileStartX(%), profileStartY(%)], %)
  |> close(%)

engine_block_ring = revolve({ axis: 'y' }, sketch005)

guide_rail_radius = 0.381
guide_rail_thickness = .1
guide_rail_sweep_start = 278
guide_rail_start_point = [1.08, 0.0]

guide_rail_sweep = 225.71
guide_rail_sweep_inner_start = -80
guide_rail_sweep_inner = 225.309
guide_rail_start_point_inner = [1.064, 0.1875]

sketch006 = startSketchOn(engine_block_ring, rectangleSegmentC001)
  |> circle({
       center: [engine_block_handle_sweep_radius, 0],
       radius: engine_block_handle_radius
     }, %)
engine_block_handle = revolve({ axis: 'y', angle: -180 }, sketch006)

guide_rail_length = -3


// TODO: this feature is unrepresentable until SSI
// outer = startSketchOn(engine_block_ring, rectangleSegmentC001)
//   |> startProfileAt(guide_rail_start_point, %)
//   |> arc({
//        angleStart: guide_rail_sweep_start,
//        angleEnd: guide_rail_sweep_start + guide_rail_sweep,
//        radius: guide_rail_radius + guide_rail_thickness * 2
//      }, %)
//   |> angledLine({
//        angle: -48,
//        length: guide_rail_radius / 2
//      }, %)
//   |> angledLine({
//        angle: -43,
//        length: guide_rail_radius / 2
//      }, %)
//   |> line([0.07, -0.12], %)
//   |> close(%)
// inner = startSketchOn(engine_block_ring, rectangleSegmentC001)
//   |> startProfileAt(guide_rail_start_point_inner, %)
//   |> arc({
//        angleStart: guide_rail_sweep_inner_start,
//        angleEnd: guide_rail_sweep_inner_start + guide_rail_sweep_inner,
//        radius: guide_rail_radius
//      }, %)
//   |> line([0.15, -0.11], %)
//   |> angledLine({
//        angle: -59,
//        length: (guide_rail_radius + 2 * guide_rail_thickness) / 2
//      }, %)
//   |> close(%)
// guide_rail_region = outer
//   |> hole(inner, %)
// cut001 = extrude(guide_rail_length, guide_rail_region)

radius_outer = outer_diameter
lug_size = 0.5
lug_width = 1

startSketchOn("XY")
|> circle({
  center: [0, 0],
  radius: radius_outer,
}, %)

startSketchOn(offsetPlane("XY", 7))
|> startProfileAt([0, radius_outer+lug_size], %)
|> xLineTo(0.0000001, %)
|> tangentialArcTo([lug_width/2, sqrt(radius_outer^2-(lug_width/2)^2)], %)
|> mirror2d({
  axis: "Y",
}, %)

startSketchOn(offsetPlane("XY", 7))
|> startProfileAt([0, radius_outer +lug_size/2], %)
|> xLineTo(0.0000001, %)
|> tangentialArcTo([(lug_width-1)/2, sqrt((radius_outer-0.5/2)^2-((lug_width-0.25)/2)^2)], %)
|> mirror2d({
  axis: "Y",
}, %)

